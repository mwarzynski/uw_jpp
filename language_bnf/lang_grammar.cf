comment "//" ;
comment "/*" "*/" ;

token TokenBool {"true"} | {"false"} ;

Prog.    Program  ::= [Function] ;

Fun.     Function ::= Ident "(" [Decl] ")" ":" [Type] "{" [Stm] "}" ;

Dec.     Decl     ::= Ident ":" Type ;
DecMany. Decl     ::= [Ident] ":" Type ;
DecSet.  Decl     ::= Ident ":" Type "=" Exp2 ;
DecArr.  Decl     ::= Ident ":" "[" Type "," Integer "]" ; 

DecArrSet.    Decl   ::= Ident ":" "[" Type "*" Integer "]" "=" "[" [Exp] "]"; 
DecArrSetMul. Decl   ::= Ident ":" "[" Type "*" Integer "]" "=" "[" Exp "," ".." "]"; 

terminator Function "" ;
terminator Stm "" ;
separator  Decl "," ;
separator  nonempty Ident "," ;

SDecl.   Stm ::= Decl ";"  ;
SExp.    Stm ::= Exp ";" ;
SBlock.  Stm ::= "{" [Stm] "}" ;
SWhile.  Stm ::= "while"  Exp  Stm ;
SFor.    Stm ::= "for" Exp "," Exp "," Exp Stm ;
SIf.     Stm ::= "if" Exp  Stm ;
SIfElse. Stm ::= "if" Exp  Stm "else" Stm ;
SReturn. Stm ::= "return" Exp  ";" ;

SJContinue. Stm ::= "continue" ";" ;
SJBreak.    Stm ::= "break" ";" ;

EAss.    Exp  ::= Ident "=" Exp2 ;
EAssArr. Exp  ::= Ident "[" Exp "]" "=" Exp2 ;

EEPlus.  Exp1 ::= Ident "+=" Exp2 ;
EEMinus. Exp1 ::= Ident "-=" Exp2 ;
EPPlus.  Exp1 ::= Ident "++" ;

ElOr.    Exp2  ::= Exp2 "||" Exp2;
ElAnd.   Exp2  ::= Exp2 "&&" Exp2;

ELt.     Exp2 ::= Exp2 "<" Exp2 ;
ELt2.    Exp2 ::= Exp2 "<" Exp2 "<" Exp2 ;
EGt.     Exp2 ::= Exp2 ">" Exp2 ;
EGt2.    Exp2 ::= Exp2 ">" Exp2 ">" Exp2 ;
EEq.     Exp2 ::= Exp2 "==" Exp2 ;
EEqIs.   Exp2 ::= Exp2 "is" Exp2 ;
EAdd.    Exp3 ::= Exp3 "+" Exp3 ;
ESub.    Exp3 ::= Exp3 "-" Exp3 ;
EMul.    Exp3 ::= Exp3 "*" Exp3 ;
EDiv.    Exp3 ::= Exp3 "/" Exp3 ;
ENeg.    Exp4 ::= "-" Exp4 ;
EPos.    Exp4 ::= "+" Exp4 ;
Call.    Exp4 ::= Ident "(" [Exp] ")" ;
EArr.    Exp4 ::= Ident "[" Exp "]" ;
EVar.    Exp4 ::= Ident ;
EStr.    Exp4 ::= String ;
EInt.    Exp4 ::= Integer ;
EDouble. Exp4 ::= Double ;
EBool.   Exp4 ::= TokenBool ;

coercions Exp 4 ;

separator Exp "," ;

TInt.    Type ::= "int" ;
TDouble. Type ::= "double" ;
TString. Type ::= "str" ;
TBool.   Type ::= "bool" ;

separator Type  "," ;
